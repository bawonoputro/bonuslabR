testthat::test_that("ridgereg predictions are close to MASS::lm.ridge", {
  formula <- Petal.Length ~ Sepal.Length + Sepal.Width
  lambda <- 1

  mod_custom <- ridgereg(formula, iris, lambda)
  mod_mass   <- MASS::lm.ridge(formula, iris, lambda = lambda, scale = TRUE)

  X <- stats::model.matrix(formula, iris)
  fitted_mass <- X %*% stats::coef(mod_mass)

  error <- sqrt(mean((mod_custom$fitted.values - fitted_mass)^2))

  testthat::expect_lt(error, 0.5)
})

testthat::test_that("ridgereg predictions are close to MASS::lm.ridge (tolerance check)", {
  formula <- Petal.Length ~ Sepal.Length + Sepal.Width
  lambda <- 1

  mod_custom <- ridgereg(formula, iris, lambda)
  mod_mass   <- MASS::lm.ridge(formula, iris, lambda = lambda, scale = TRUE)

  X <- stats::model.matrix(formula, iris)
  fitted_mass <- X %*% stats::coef(mod_mass)

  testthat::expect_equal(
    mod_custom$fitted.values,
    fitted_mass,
    tolerance = 1e-1
  )
})

testthat::test_that("ridgereg_qr returns similar predictions to ridgereg", {
  formula <- Petal.Length ~ Sepal.Length + Sepal.Width
  lambda <- 1

  mod_ls <- ridgereg(formula, iris, lambda)
  mod_qr <- ridgereg_qr(formula, iris, lambda)

  error <- sqrt(mean((mod_ls$fitted.values - mod_qr$fitted.values)^2))

  testthat::expect_lte(error, 0.02)
})

testthat::test_that("predict.ridgereg_qr works correctly", {
  formula <- Petal.Length ~ Sepal.Length + Sepal.Width
  lambda <- 1

  mod_qr  <- ridgereg_qr(formula, iris, lambda)
  preds   <- predict(mod_qr, iris)

  testthat::expect_equal(preds, mod_qr$fitted.values)
})

testthat::test_that("coef.ridgereg_qr returns correct number of coefficients", {
  formula <- Petal.Length ~ Sepal.Length + Sepal.Width
  lambda <- 1

  mod_qr <- ridgereg_qr(formula, iris, lambda)
  coefs  <- coef(mod_qr)

  # Intercept + 2 predictors = 3
  testthat::expect_equal(length(coefs), 3)
})
