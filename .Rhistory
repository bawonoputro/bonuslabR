devtools::uses_testthat()
devtools::test()
visualize_airport_delays()
#' Visualize Airport Delays
#'
#' Creates a plot of mean arrival delays by airport using dplyr and ggplot2.
#' @return A ggplot object
#' @export
#' @importFrom dplyr group_by summarise left_join select
#' @importFrom ggplot2 ggplot geom_point aes labs theme_minimal
#' @import nycflights13
visualize_airport_delays <- function() {
library(dplyr)
library(ggplot2)
library(nycflights13)
# Calculate mean delay per destination
delay_data <- flights %>%
group_by(dest) %>%
summarise(mean_delay = mean(arr_delay, na.rm = TRUE)) %>%
left_join(airports, by = c("dest" = "faa")) %>%
select(dest, mean_delay, lat, lon)
# Plot
ggplot(delay_data, aes(x = lon, y = lat, color = mean_delay)) +
geom_point(size = 3, alpha = 0.7) +
labs(
title = "Mean Arrival Delay by Airport",
x = "Longitude",
y = "Latitude",
color = "Mean Delay (min)"
) +
theme_minimal()
}
visualize_airport_delays()
usethis::use_readme_md()
usethis::use_github_action(check_standard)
usethis::use_github_action("check_standard")
usethis::use_github_action("check_standard")
usethis::use_github_action_check_standard()
usethis::use_mit_license()
devtools::load_all()
devtools::load_all()
devtools::test()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::test()
devtools::document()
devtools::test()
devtools::load_all()
devtools::test()
devtools::test()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
usethis::use_vignette("ridgereg")
library(regression)
devtools::document()  # updates NAMESPACE, etc.
devtools::install()   # reinstalls your package with the new code
devtools::document()
devtools::install()
devtools::test()
devtools::document()
devtools::test()
devtools::document()
devtools::test()
